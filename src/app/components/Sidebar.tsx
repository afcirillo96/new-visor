'use client'

import React, { useState, useEffect } from 'react';
import { motion, useAnimation } from 'framer-motion';
import Head from 'next/head';
import {
    BsSearch,
    BsEyeFill,
    BsBookmarkFill,
    BsFillArrowLeftSquareFill,
    BsPeopleFill,
    BsTerminalFill,
    BsFillArrowRightSquareFill,
} from 'react-icons/bs';
import { AiFillFire, AiFillMessage } from 'react-icons/ai';
import { IoMdArrowRoundUp } from 'react-icons/io';
import { MdNightlightRound, MdFeedback } from 'react-icons/md';
import { FaCog } from 'react-icons/fa';

import styles from './Sidebar.module.css'; // Importar estilos como módulo CSS



const Sidebar = () => {
    const [active, setActive] = useState(false);
    const controls = useAnimation();
    const controlText = useAnimation();
    const controlTitleText = useAnimation();

    const showMore = () => {
        controls.start({
            width: '250px',
            transition: { duration: 0.001 },
        });
        controlText.start({
            opacity: 1,
            display: 'block',
            transition: { delay: 0.3 },
        });
        controlTitleText.start({
            opacity: 1,
            transition: { delay: 0.3 },
        });

        setActive(true);
    };

    const showLess = () => {
        controls.start({
            width: '55px',
            transition: { duration: 0.001 },
        });

        controlText.start({
            opacity: 0,
            display: 'none',
        });

        controlTitleText.start({
            opacity: 0,
        });

        setActive(false);
    };

    useEffect(() => {
        showMore();
    }, []);

    
    const data = [
        {
            name: 'Discover',
            items: [
                {
                    title: 'Popular',
                    icon: AiFillFire,
                },
                {
                    title: 'Most Upvoted',
                    icon: IoMdArrowRoundUp,
                },
                {
                    title: 'Best Discussions',
                    icon: AiFillMessage,
                },
                {
                    title: 'Search',
                    icon: BsSearch,
                },
            ],
        },
        // {
        //     name: 'Manage',
        //     items: [
        //         {
        //             title: 'Bookmarks',
        //             icon: BsBookmarkFill,
        //         },
        //         {
        //             title: 'Reading history',
        //             icon: BsEyeFill,
        //         },
        //         {
        //             title: 'Focus Mode',
        //             icon: MdNightlightRound,
        //         },
        //         {
        //             title: 'Customize',
        //             icon: FaCog,
        //         },
        //     ],
        // },
    ];

    const datafooter = [
        {
            name: '',
            items: [
                {
                    title: 'Docs',
                    icon: BsBookmarkFill,
                },
                {
                    title: 'Changelog',
                    icon: BsTerminalFill,
                },
                {
                    title: 'Feedback',
                    icon: MdFeedback,
                },
                {
                    title: 'Invite people',
                    icon: BsPeopleFill,
                },
            ],
        },
    ];

    return (
        <div>
            {/* <Head>
                <title>Sidebar</title>
                <meta name='description' content='Generated by create next app' />
                <link rel='icon' href='/favicon.ico' />
            </Head> */}

            <motion.div animate={controls} className={styles.sidebar}>
                {active && (
                    <BsFillArrowLeftSquareFill
                        onClick={showLess}
                        // className={styles.customIcon ${active ? 'hidden' : ''}}
                        className={`${styles.customIcon} ${active ? styles.customIconOpen : ''}`}


                    />
                )}
                {!active && (
                    <BsFillArrowRightSquareFill
                        onClick={showMore}
                        // className={styles.customIcon}
                        className={`${styles.customIcon} ${!active ? styles.customIconClosed : ''}`}

                    />
                )}



                <div className='grow'>
                    {data.map((group, index) => (
                        <div key={index} className='my-2'>
                            <motion.p animate={controlTitleText} className='mb-2 ml-4 text-sm font-bold text-gray-500'>
                                {group.name}
                            </motion.p>

                            {group.items.map((item, index2) => (
                                <div key={index2} className='flex px-4 py-1 cursor-pointer'>
                                    <item.icon className='text-lg text-gray-500' />
                                    <motion.p animate={controlText} className='ml-4 text-sm font-bold text-gray-400'>
                                        {' '}
                                        {item.title}
                                    </motion.p>
                                </div>
                            ))}
                        </div>
                    ))}
                </div>

                <div>
                    {datafooter.map((group, index) => (
                        <div key={index} className='my-2'>
                            <motion.p animate={controlTitleText} className='mb-2 ml-4 text-sm font-bold text-gray-500'>
                                {group.name}
                            </motion.p>

                            {group.items.map((item, index2) => (
                                <div key={index2} className='flex px-4 py-1 cursor-pointer'>
                                    <item.icon className='text-lg text-gray-500' />
                                    <motion.p animate={controlText} className='ml-4 text-sm font-bold text-gray-400'>
                                        {' '}
                                        {item.title}
                                    </motion.p>
                                </div>
                            ))}
                        </div>
                    ))}
                </div>
            </motion.div>
            
        </div>
    );
};

export default Sidebar;







// import { useState } from 'react';
// import styles from './Sidebar.module.css'; // Importar estilos como módulo CSS

// const Sidebar = () => {
//   const [isOpen, setIsOpen] = useState(false);

//   const toggleSidebar = () => {
//     setIsOpen(!isOpen);
//   };

//   return (
//     <div>
//       <button className={styles.toggleButton} onClick={toggleSidebar}>
//         Toggle
//       </button>
//       <div className={`${styles.sidebar} ${isOpen ? styles.open : styles.closed}`}>
//         <ul>
//           <li>Item 1</li>
//           <li>Item 2</li>
//           <li>Item 3</li>
//         </ul>
//       </div>
//     </div>
//   );
// };

// export default Sidebar;
